# MCP 서버들을 위한 Python 3.12 기반 이미지
FROM python:3.12-slim

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 패키지 업데이트 및 필요한 도구 설치
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# UV 패키지 매니저 설치
RUN pip install uv

# 의존성 및 프로젝트 파일 복사 (README.md는 .dockerignore에 의해 제외되므로 생략)
COPY pyproject.toml uv.lock LICENSE ./

# 프로젝트 소스 먼저 복사 (uv가 프로젝트를 설치할 때 src 레이아웃 필요)
COPY src/ ./src/

# 잠금 파일 기반 동기화 (프로젝트 포함)
RUN uv sync --frozen

# 개발 모드로 패키지 설치 (중복 설치이지만 안전; 필요한 경우 캐시에 의해 빠르게 처리)
RUN uv pip install -e .

# 환경변수 설정
ENV PYTHONPATH=/app
ENV HOST=0.0.0.0
ENV LOG_LEVEL=info

# 헬스체크를 위한 curl 설정
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# 각 서버별 포트 노출 (docker-compose에서 설정)
EXPOSE 3000 3001 3002

# 기본 실행: uvicorn을 import-string + --factory로 실행
# docker-compose에서는 command로 APP과 포트만 덮어씁니다.
ENTRYPOINT ["uv", "run", "uvicorn"]
CMD ["mcp_servers.tavily_search.server:create_app", "--host", "0.0.0.0", "--port", "3001", "--factory"]